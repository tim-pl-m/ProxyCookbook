# Dockerfile is used to build an image containing basic stuff to be used as a Jenkins slave build node.
FROM centos:7
MAINTAINER Max Edenharter <max.edenharter@adesso.de>

# Make sure the package repository is up to date.
RUN yum -y update && yum clean all

# Install a basic SSH server
RUN yum install -y openssh-server
# Make jenkins user require no tty
RUN echo "Defaults:jenkins !requiretty" >> /etc/sudoers
RUN sed -i 's|session    required     pam_loginuid.so|session    optional     pam_loginuid.so|g' /etc/pam.d/sshd
RUN mkdir -p /var/run/sshd && mkdir /var/log/ssh

# Set up SSH Host Key
RUN /usr/bin/ssh-keygen -q -t rsa -f /etc/ssh/ssh_host_rsa_key -C '' -N ''
RUN chmod 600 /etc/ssh/ssh_host_rsa_key && chmod 644 /etc/ssh/ssh_host_rsa_key.pub

# Install JDK 7 (latest edition)
# Java 1.7
RUN yum install -y wget tar git subversion
RUN wget --header "Cookie: oraclelicense=accept-securebackup-cookie" http://download.oracle.com/otn-pub/java/jdk/7u67-b01/jdk-7u67-linux-x64.tar.gz
RUN mkdir -p /opt/jdk
RUN tar -zxf jdk-7u67-linux-x64.tar.gz -C /opt/jdk
RUN git config --system http.sslVerify false

ENV JAVA_HOME /opt/jdk/jdk1.7.0_67
ENV PATH $PATH:$JAVA_HOME/bin
ENV JAVA_OPTS -Xmx2G -Xms2G -XX:PermSize=256M -XX:MaxPermSize=256m

# configure symbolic links for the java and javac executables
RUN update-alternatives --install /usr/bin/java java $JAVA_HOME/bin/java 20000 && update-alternatives --install /usr/bin/javac javac $JAVA_HOME/bin/javac 20000

# Add user jenkins to the image
RUN adduser <%= @ssh_user %>
# Set password for the jenkins user (you may want to alter this).
RUN echo "<%= @ssh_user %>:<%= @ssh_pw %>" | chpasswd

# Standard SSH port
EXPOSE 22
CMD ["/usr/sbin/sshd", "-D"]
